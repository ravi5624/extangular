/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Host, Optional, SkipSelf, Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
var pivotgridMetaData = /** @class */ (function () {
    function pivotgridMetaData() {
    }
    pivotgridMetaData.XTYPE = 'pivotgrid';
    pivotgridMetaData.PROPERTIES = [
        'activeChildTabIndex',
        'activeItem',
        'allowFocusingDisabledChildren',
        'alwaysOnTop',
        'ariaAttributes',
        'ariaDescribedBy',
        'ariaLabel',
        'ariaLabelledBy',
        'associatedData',
        'autoDestroy',
        'autoSize',
        'axisLock',
        'bind',
        'border',
        'bottom',
        'bufferSize',
        'cardSwitchAnimation',
        'centered',
        'cls',
        'clsGrandTotal',
        'clsGroupTotal',
        'columnLines',
        'columnMenu',
        'columnResize',
        'columns',
        'columnsMenuItem',
        'constrainAlign',
        'contentEl',
        'control',
        'controller',
        'data',
        'defaultFocus',
        'defaultListenerScope',
        'defaults',
        'defaultType',
        'deferEmptyText',
        'deselectOnContainerClick',
        'disabled',
        'disableSelection',
        'disclosureProperty',
        'displayed',
        'docked',
        'draggable',
        'emptyItemText',
        'emptyState',
        'emptyText',
        'emptyTextDefaults',
        'emptyTextProperty',
        'enableColumnSort',
        'enableLoadMask',
        'enableTextSelection',
        'enterAnimation',
        'eventHandlers',
        'exitAnimation',
        'flex',
        'floated',
        'focusableContainer',
        'focusCls',
        'fullscreen',
        'grouped',
        'groupFooter',
        'groupHeader',
        'height',
        'hidden',
        'hideAnimation',
        'hideHeaders',
        'hideMode',
        'hideOnMaskTap',
        'hideScrollbar',
        'horizontalOverflow',
        'html',
        'id',
        'inactiveChildTabIndex',
        'indexBar',
        'infinite',
        'inline',
        'innerCls',
        'innerCtHeight',
        'innerWidth',
        'instanceCls',
        'itemButtonMode',
        'itemCls',
        'itemConfig',
        'itemContentCls',
        'itemDataMap',
        'itemId',
        'itemInnerCls',
        'itemRipple',
        'items',
        'itemsFocusable',
        'itemTpl',
        'keyMap',
        'keyMapEnabled',
        'keyMapTarget',
        'layout',
        'left',
        'leftAxisCellConfig',
        'listeners',
        'loadingHeight',
        'loadingText',
        'maintainChildNodes',
        'manageBorders',
        'margin',
        'markDirty',
        'masked',
        'matrix',
        'maxHeight',
        'maxItemCache',
        'maxWidth',
        'minHeight',
        'minimumBufferDistance',
        'minWidth',
        'modal',
        'modelValidation',
        'multiColumnSort',
        'name',
        'nameable',
        'nameHolder',
        'onItemDisclosure',
        'padding',
        'pinFooters',
        'pinHeaders',
        'pinnedFooter',
        'pinnedFooterHeight',
        'pinnedHeader',
        'pinnedHeaderHeight',
        'plugins',
        'pressedDelay',
        'preventSelectionOnDisclose',
        'preventSelectionOnTool',
        'publishes',
        'record',
        'reference',
        'referenceHolder',
        'relative',
        'renderTo',
        'reserveScrollbar',
        'resetFocusPosition',
        'right',
        'ripple',
        'rowLines',
        'rowNumbers',
        'scrollable',
        'scrollDock',
        'scrollToTopOnRefresh',
        'selectable',
        'selection',
        'selfAlign',
        'session',
        'shadow',
        'shareableName',
        'shim',
        'showAnimation',
        'sortable',
        'startColGroupsCollapsed',
        'startRowGroupsCollapsed',
        'stateful',
        'statefulDefaults',
        'stateId',
        'store',
        'striped',
        'style',
        'tabIndex',
        'title',
        'titleBar',
        'toFrontOnShow',
        'tooltip',
        'top',
        'topAxisCellConfig',
        'topRenderedIndex',
        'touchAction',
        'tpl',
        'tplWriteMode',
        'translatable',
        'triggerCtEvent',
        'triggerEvent',
        'twoWayBindable',
        'ui',
        'userCls',
        'userSelectable',
        'useSimpleItems',
        'variableHeights',
        'verticalOverflow',
        'viewModel',
        'visibleHeight',
        'visibleLeft',
        'visibleTop',
        'visibleWidth',
        'weight',
        'weighted',
        'width',
        'x',
        'xtype',
        'y',
        'zIndex',
        'platformConfig',
        'responsiveConfig',
        'align',
        'fitToParent',
        'config'
    ];
    pivotgridMetaData.EVENTS = [
        { name: 'activate', parameters: 'newActiveItem,pivotgrid,oldActiveItem' },
        { name: 'activeItemchange', parameters: 'sender,value,oldValue' },
        { name: 'add', parameters: '' },
        { name: 'added', parameters: 'sender,container,index' },
        { name: 'beforeactiveItemchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforebottomchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforecenteredchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforedisabledchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforedockedchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeheightchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforehiddenchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforehide', parameters: 'sender' },
        { name: 'beforeleftchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforemaxHeightchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforemaxWidthchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeminHeightchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeminWidthchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeorientationchange', parameters: '' },
        { name: 'beforerightchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforescrollablechange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeselectionextend', parameters: 'grid,An,extension' },
        { name: 'beforeshow', parameters: 'sender' },
        { name: 'beforestorechange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforetofront', parameters: 'pivotgrid' },
        { name: 'beforetopchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforewidthchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'blur', parameters: 'pivotgrid,event' },
        { name: 'bottomchange', parameters: 'sender,value,oldValue' },
        { name: 'cellselection', parameters: 'grid,selection' },
        { name: 'centeredchange', parameters: 'sender,value,oldValue' },
        { name: 'childdoubletap', parameters: 'pivotgrid,location' },
        { name: 'childlongpress', parameters: 'pivotgrid,location' },
        { name: 'childmouseenter', parameters: 'pivotgrid,location' },
        { name: 'childmouseleave', parameters: 'pivotgrid,location' },
        { name: 'childsingletap', parameters: 'pivotgrid,location' },
        { name: 'childtap', parameters: 'pivotgrid,location' },
        { name: 'childtaphold', parameters: 'pivotgrid,location' },
        { name: 'childtouchcancel', parameters: 'pivotgrid,location' },
        { name: 'childtouchend', parameters: 'pivotgrid,location' },
        { name: 'childtouchmove', parameters: 'pivotgrid,location' },
        { name: 'childtouchstart', parameters: 'pivotgrid,location' },
        { name: 'columnadd', parameters: 'pivotgrid,column,index' },
        { name: 'columnhide', parameters: 'pivotgrid,column' },
        { name: 'columnmenucreated', parameters: 'grid,column,menu' },
        { name: 'columnmove', parameters: 'pivotgrid,column,fromIndex,toIndex' },
        { name: 'columnremove', parameters: 'pivotgrid,column' },
        { name: 'columnresize', parameters: 'pivotgrid,column,width' },
        { name: 'columnselection', parameters: 'grid,selection' },
        { name: 'columnshow', parameters: 'pivotgrid,column' },
        { name: 'columnsort', parameters: 'pivotgrid,column,direction' },
        { name: 'deactivate', parameters: 'oldActiveItem,pivotgrid,newActiveItem' },
        { name: 'deselect', parameters: 'pivotgrid,records' },
        { name: 'destroy', parameters: '' },
        { name: 'disabledchange', parameters: 'sender,value,oldValue' },
        { name: 'disclose', parameters: 'list,record,target,index,event' },
        { name: 'dockedchange', parameters: 'sender,value,oldValue' },
        { name: 'erased', parameters: 'sender' },
        { name: 'floatingchange', parameters: 'sender,positioned' },
        { name: 'focus', parameters: 'pivotgrid,event' },
        { name: 'focusenter', parameters: 'pivotgrid,event' },
        { name: 'focusleave', parameters: 'pivotgrid,event' },
        { name: 'fullscreen', parameters: 'sender' },
        { name: 'heightchange', parameters: 'sender,value,oldValue' },
        { name: 'hiddenchange', parameters: 'sender,value,oldValue' },
        { name: 'hide', parameters: 'sender' },
        { name: 'initialize', parameters: 'sender' },
        { name: 'itemaction', parameters: 'pivotgrid,index,record,action' },
        { name: 'itemdoubletap', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemlongpress', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemmouseenter', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemmouseleave', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemsingletap', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemswipe', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemtap', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemtaphold', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemtouchcancel', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemtouchend', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemtouchmove', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'itemtouchstart', parameters: 'pivotgrid,index,target,record,e' },
        { name: 'leftchange', parameters: 'sender,value,oldValue' },
        { name: 'maxHeightchange', parameters: 'sender,value,oldValue' },
        { name: 'maxWidthchange', parameters: 'sender,value,oldValue' },
        { name: 'minHeightchange', parameters: 'sender,value,oldValue' },
        { name: 'minWidthchange', parameters: 'sender,value,oldValue' },
        { name: 'move', parameters: '' },
        { name: 'moved', parameters: 'sender,container,toIndex,fromIndex' },
        { name: 'navigate', parameters: 'pivotgrid,to,from' },
        { name: 'orientationchange', parameters: '' },
        { name: 'painted', parameters: 'sender,element' },
        { name: 'pivotbeforereconfigure', parameters: 'matrix,config' },
        { name: 'pivotbeforerequest', parameters: 'matrix,params' },
        { name: 'pivotbuildtotals', parameters: 'matrix,totals' },
        { name: 'pivotcolumnsbuilt', parameters: 'matrix,columns' },
        { name: 'pivotdone', parameters: 'matrix' },
        { name: 'pivotgroupcelldoubletap', parameters: 'params,e' },
        { name: 'pivotgroupcelltap', parameters: 'params,e' },
        { name: 'pivotgroupcelltaphold', parameters: 'params,e' },
        { name: 'pivotgroupcollapse', parameters: 'matrix,type,group' },
        { name: 'pivotgroupdoubletap', parameters: 'params,e' },
        { name: 'pivotgroupexpand', parameters: 'matrix,type,group' },
        { name: 'pivotgrouptap', parameters: 'params,e' },
        { name: 'pivotgrouptaphold', parameters: 'params,e' },
        { name: 'pivotitemcelldoubletap', parameters: 'params,e' },
        { name: 'pivotitemcelltap', parameters: 'params,e' },
        { name: 'pivotitemcelltaphold', parameters: 'params,e' },
        { name: 'pivotitemdoubletap', parameters: 'params,e' },
        { name: 'pivotitemtap', parameters: 'params,e' },
        { name: 'pivotitemtaphold', parameters: 'params,e' },
        { name: 'pivotmodelbuilt', parameters: 'matrix,model' },
        { name: 'pivotprogress', parameters: 'matrix,index,total' },
        { name: 'pivotreconfigure', parameters: 'matrix,config' },
        { name: 'pivotrecordbuilt', parameters: 'matrix,record' },
        { name: 'pivotrequestexception', parameters: 'matrix,response' },
        { name: 'pivotstart', parameters: 'matrix' },
        { name: 'pivotstorebuilt', parameters: 'matrix,store' },
        { name: 'pivottotalcelldoubletap', parameters: 'params,e' },
        { name: 'pivottotalcelltap', parameters: 'params,e' },
        { name: 'pivottotalcelltaphold', parameters: 'params,e' },
        { name: 'pivottotaldoubletap', parameters: 'params,e' },
        { name: 'pivottotaltap', parameters: 'params,e' },
        { name: 'pivottotaltaphold', parameters: 'params,e' },
        { name: 'positionedchange', parameters: 'sender,positioned' },
        { name: 'refresh', parameters: 'pivotgrid' },
        { name: 'remove', parameters: '' },
        { name: 'removed', parameters: 'sender,container,index' },
        { name: 'renderedchange', parameters: 'pivotgrid,item,rendered' },
        { name: 'resize', parameters: 'element,info' },
        { name: 'rightchange', parameters: 'sender,value,oldValue' },
        { name: 'scrollablechange', parameters: 'sender,value,oldValue' },
        { name: 'select', parameters: 'pivotgrid,selected' },
        { name: 'selectionextenderdrag', parameters: 'grid,An,extension' },
        { name: 'show', parameters: 'sender' },
        { name: 'storechange', parameters: 'sender,value,oldValue' },
        { name: 'tofront', parameters: 'pivotgrid' },
        { name: 'topchange', parameters: 'sender,value,oldValue' },
        { name: 'updatedata', parameters: 'sender,newData' },
        { name: 'widthchange', parameters: 'sender,value,oldValue' },
        { name: 'ready', parameters: '' }
    ];
    pivotgridMetaData.EVENTNAMES = [
        'activate',
        'activeItemchange',
        'add',
        'added',
        'beforeactiveItemchange',
        'beforebottomchange',
        'beforecenteredchange',
        'beforedisabledchange',
        'beforedockedchange',
        'beforeheightchange',
        'beforehiddenchange',
        'beforehide',
        'beforeleftchange',
        'beforemaxHeightchange',
        'beforemaxWidthchange',
        'beforeminHeightchange',
        'beforeminWidthchange',
        'beforeorientationchange',
        'beforerightchange',
        'beforescrollablechange',
        'beforeselectionextend',
        'beforeshow',
        'beforestorechange',
        'beforetofront',
        'beforetopchange',
        'beforewidthchange',
        'blur',
        'bottomchange',
        'cellselection',
        'centeredchange',
        'childdoubletap',
        'childlongpress',
        'childmouseenter',
        'childmouseleave',
        'childsingletap',
        'childtap',
        'childtaphold',
        'childtouchcancel',
        'childtouchend',
        'childtouchmove',
        'childtouchstart',
        'columnadd',
        'columnhide',
        'columnmenucreated',
        'columnmove',
        'columnremove',
        'columnresize',
        'columnselection',
        'columnshow',
        'columnsort',
        'deactivate',
        'deselect',
        'destroy',
        'disabledchange',
        'disclose',
        'dockedchange',
        'erased',
        'floatingchange',
        'focus',
        'focusenter',
        'focusleave',
        'fullscreen',
        'heightchange',
        'hiddenchange',
        'hide',
        'initialize',
        'itemaction',
        'itemdoubletap',
        'itemlongpress',
        'itemmouseenter',
        'itemmouseleave',
        'itemsingletap',
        'itemswipe',
        'itemtap',
        'itemtaphold',
        'itemtouchcancel',
        'itemtouchend',
        'itemtouchmove',
        'itemtouchstart',
        'leftchange',
        'maxHeightchange',
        'maxWidthchange',
        'minHeightchange',
        'minWidthchange',
        'move',
        'moved',
        'navigate',
        'orientationchange',
        'painted',
        'pivotbeforereconfigure',
        'pivotbeforerequest',
        'pivotbuildtotals',
        'pivotcolumnsbuilt',
        'pivotdone',
        'pivotgroupcelldoubletap',
        'pivotgroupcelltap',
        'pivotgroupcelltaphold',
        'pivotgroupcollapse',
        'pivotgroupdoubletap',
        'pivotgroupexpand',
        'pivotgrouptap',
        'pivotgrouptaphold',
        'pivotitemcelldoubletap',
        'pivotitemcelltap',
        'pivotitemcelltaphold',
        'pivotitemdoubletap',
        'pivotitemtap',
        'pivotitemtaphold',
        'pivotmodelbuilt',
        'pivotprogress',
        'pivotreconfigure',
        'pivotrecordbuilt',
        'pivotrequestexception',
        'pivotstart',
        'pivotstorebuilt',
        'pivottotalcelldoubletap',
        'pivottotalcelltap',
        'pivottotalcelltaphold',
        'pivottotaldoubletap',
        'pivottotaltap',
        'pivottotaltaphold',
        'positionedchange',
        'refresh',
        'remove',
        'removed',
        'renderedchange',
        'resize',
        'rightchange',
        'scrollablechange',
        'select',
        'selectionextenderdrag',
        'show',
        'storechange',
        'tofront',
        'topchange',
        'updatedata',
        'widthchange',
        'ready'
    ];
    return pivotgridMetaData;
}());
export { pivotgridMetaData };
if (false) {
    /** @type {?} */
    pivotgridMetaData.XTYPE;
    /** @type {?} */
    pivotgridMetaData.PROPERTIES;
    /** @type {?} */
    pivotgridMetaData.EVENTS;
    /** @type {?} */
    pivotgridMetaData.EVENTNAMES;
}
var ExtPivotgridComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ExtPivotgridComponent, _super);
    function ExtPivotgridComponent(eRef, hostComponent) {
        var _this = _super.call(this, eRef.nativeElement, pivotgridMetaData, hostComponent) || this;
        _this.hostComponent = hostComponent;
        return _this;
    }
    /**
     * @return {?}
     */
    ExtPivotgridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.baseOnInit(pivotgridMetaData);
    };
    /**
     * @return {?}
     */
    ExtPivotgridComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.baseAfterContentInit();
        //this['ready'].emit(this)
    };
    ExtPivotgridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'pivotgrid',
                    inputs: pivotgridMetaData.PROPERTIES,
                    outputs: pivotgridMetaData.EVENTNAMES,
                    providers: [{ provide: base, useExisting: forwardRef((/**
                             * @return {?}
                             */
                            function () { return ExtPivotgridComponent; })) }],
                    template: '<ng-template></ng-template>'
                }] }
    ];
    /** @nocollapse */
    ExtPivotgridComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: base, decorators: [{ type: Host }, { type: Optional }, { type: SkipSelf }] }
    ]; };
    return ExtPivotgridComponent;
}(base));
export { ExtPivotgridComponent };
if (false) {
    /** @type {?} */
    ExtPivotgridComponent.prototype.hostComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0LXBpdm90Z3JpZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ac2VuY2hhL2V4dC1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2V4dC1waXZvdGdyaWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUVMLElBQUksRUFDSixRQUFRLEVBQ1IsUUFBUSxFQUtSLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxFQUNYLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDOUI7SUFBQTtJQW9lQSxDQUFDO0lBbmVlLHVCQUFLLEdBQVcsV0FBVyxDQUFDO0lBQzVCLDRCQUFVLEdBQWE7UUFDbkMscUJBQXFCO1FBQ3JCLFlBQVk7UUFDWiwrQkFBK0I7UUFDL0IsYUFBYTtRQUNiLGdCQUFnQjtRQUNoQixpQkFBaUI7UUFDakIsV0FBVztRQUNYLGdCQUFnQjtRQUNoQixnQkFBZ0I7UUFDaEIsYUFBYTtRQUNiLFVBQVU7UUFDVixVQUFVO1FBQ1YsTUFBTTtRQUNOLFFBQVE7UUFDUixRQUFRO1FBQ1IsWUFBWTtRQUNaLHFCQUFxQjtRQUNyQixVQUFVO1FBQ1YsS0FBSztRQUNMLGVBQWU7UUFDZixlQUFlO1FBQ2YsYUFBYTtRQUNiLFlBQVk7UUFDWixjQUFjO1FBQ2QsU0FBUztRQUNULGlCQUFpQjtRQUNqQixnQkFBZ0I7UUFDaEIsV0FBVztRQUNYLFNBQVM7UUFDVCxZQUFZO1FBQ1osTUFBTTtRQUNOLGNBQWM7UUFDZCxzQkFBc0I7UUFDdEIsVUFBVTtRQUNWLGFBQWE7UUFDYixnQkFBZ0I7UUFDaEIsMEJBQTBCO1FBQzFCLFVBQVU7UUFDVixrQkFBa0I7UUFDbEIsb0JBQW9CO1FBQ3BCLFdBQVc7UUFDWCxRQUFRO1FBQ1IsV0FBVztRQUNYLGVBQWU7UUFDZixZQUFZO1FBQ1osV0FBVztRQUNYLG1CQUFtQjtRQUNuQixtQkFBbUI7UUFDbkIsa0JBQWtC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SSxrQkFBTSxJQUFJLENBQUMsYUFBYSxFQUFDLGlCQUFpQixFQUFDLGFBQWEsQ0FBQyxTQUMxRDtRQUZ1RCxtQkFBYSxHQUFiLGFBQWEsQ0FBTzs7SUFFNUUsQ0FBQzs7OztJQUNJLHdDQUFROzs7SUFBZjtRQUNFLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQTtJQUNwQyxDQUFDOzs7O0lBQ00sa0RBQWtCOzs7SUFBekI7UUFDRSxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQTtRQUMzQiwwQkFBMEI7SUFDNUIsQ0FBQzs7Z0JBbEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsV0FBVztvQkFDckIsTUFBTSxFQUFFLGlCQUFpQixDQUFDLFVBQVU7b0JBQ3BDLE9BQU8sRUFBRSxpQkFBaUIsQ0FBQyxVQUFVO29CQUNyQyxTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLFVBQVU7Ozs0QkFBQyxjQUFNLE9BQUEscUJBQXFCLEVBQXJCLENBQXFCLEVBQUMsRUFBQyxDQUFDO29CQUNsRixRQUFRLEVBQUUsNkJBQTZCO2lCQUN4Qzs7OztnQkEvZUMsVUFBVTtnQkFHSCxJQUFJLHVCQStlUyxJQUFJLFlBQUksUUFBUSxZQUFJLFFBQVE7O0lBWWxELDRCQUFDO0NBQUEsQUFyQkQsQ0FPMkMsSUFBSSxHQWM5QztTQWRZLHFCQUFxQjs7O0lBRWIsOENBQTJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgSW5qZWN0YWJsZSxcbiAgSG9zdCxcbiAgT3B0aW9uYWwsXG4gIFNraXBTZWxmLFxuICBPdXRwdXQsXG4gIE9uSW5pdCxcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgT25DaGFuZ2VzLFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIGZvcndhcmRSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBiYXNlIH0gZnJvbSAnLi9iYXNlJztcbmV4cG9ydCBjbGFzcyBwaXZvdGdyaWRNZXRhRGF0YSB7XG4gIHB1YmxpYyBzdGF0aWMgWFRZUEU6IHN0cmluZyA9ICdwaXZvdGdyaWQnO1xuICBwdWJsaWMgc3RhdGljIFBST1BFUlRJRVM6IHN0cmluZ1tdID0gW1xuICAgICdhY3RpdmVDaGlsZFRhYkluZGV4JyxcbiAgICAnYWN0aXZlSXRlbScsXG4gICAgJ2FsbG93Rm9jdXNpbmdEaXNhYmxlZENoaWxkcmVuJyxcbiAgICAnYWx3YXlzT25Ub3AnLFxuICAgICdhcmlhQXR0cmlidXRlcycsXG4gICAgJ2FyaWFEZXNjcmliZWRCeScsXG4gICAgJ2FyaWFMYWJlbCcsXG4gICAgJ2FyaWFMYWJlbGxlZEJ5JyxcbiAgICAnYXNzb2NpYXRlZERhdGEnLFxuICAgICdhdXRvRGVzdHJveScsXG4gICAgJ2F1dG9TaXplJyxcbiAgICAnYXhpc0xvY2snLFxuICAgICdiaW5kJyxcbiAgICAnYm9yZGVyJyxcbiAgICAnYm90dG9tJyxcbiAgICAnYnVmZmVyU2l6ZScsXG4gICAgJ2NhcmRTd2l0Y2hBbmltYXRpb24nLFxuICAgICdjZW50ZXJlZCcsXG4gICAgJ2NscycsXG4gICAgJ2Nsc0dyYW5kVG90YWwnLFxuICAgICdjbHNHcm91cFRvdGFsJyxcbiAgICAnY29sdW1uTGluZXMnLFxuICAgICdjb2x1bW5NZW51JyxcbiAgICAnY29sdW1uUmVzaXplJyxcbiAgICAnY29sdW1ucycsXG4gICAgJ2NvbHVtbnNNZW51SXRlbScsXG4gICAgJ2NvbnN0cmFpbkFsaWduJyxcbiAgICAnY29udGVudEVsJyxcbiAgICAnY29udHJvbCcsXG4gICAgJ2NvbnRyb2xsZXInLFxuICAgICdkYXRhJyxcbiAgICAnZGVmYXVsdEZvY3VzJyxcbiAgICAnZGVmYXVsdExpc3RlbmVyU2NvcGUnLFxuICAgICdkZWZhdWx0cycsXG4gICAgJ2RlZmF1bHRUeXBlJyxcbiAgICAnZGVmZXJFbXB0eVRleHQnLFxuICAgICdkZXNlbGVjdE9uQ29udGFpbmVyQ2xpY2snLFxuICAgICdkaXNhYmxlZCcsXG4gICAgJ2Rpc2FibGVTZWxlY3Rpb24nLFxuICAgICdkaXNjbG9zdXJlUHJvcGVydHknLFxuICAgICdkaXNwbGF5ZWQnLFxuICAgICdkb2NrZWQnLFxuICAgICdkcmFnZ2FibGUnLFxuICAgICdlbXB0eUl0ZW1UZXh0JyxcbiAgICAnZW1wdHlTdGF0ZScsXG4gICAgJ2VtcHR5VGV4dCcsXG4gICAgJ2VtcHR5VGV4dERlZmF1bHRzJyxcbiAgICAnZW1wdHlUZXh0UHJvcGVydHknLFxuICAgICdlbmFibGVDb2x1bW5Tb3J0JyxcbiAgICAnZW5hYmxlTG9hZE1hc2snLFxuICAgICdlbmFibGVUZXh0U2VsZWN0aW9uJyxcbiAgICAnZW50ZXJBbmltYXRpb24nLFxuICAgICdldmVudEhhbmRsZXJzJyxcbiAgICAnZXhpdEFuaW1hdGlvbicsXG4gICAgJ2ZsZXgnLFxuICAgICdmbG9hdGVkJyxcbiAgICAnZm9jdXNhYmxlQ29udGFpbmVyJyxcbiAgICAnZm9jdXNDbHMnLFxuICAgICdmdWxsc2NyZWVuJyxcbiAgICAnZ3JvdXBlZCcsXG4gICAgJ2dyb3VwRm9vdGVyJyxcbiAgICAnZ3JvdXBIZWFkZXInLFxuICAgICdoZWlnaHQnLFxuICAgICdoaWRkZW4nLFxuICAgICdoaWRlQW5pbWF0aW9uJyxcbiAgICAnaGlkZUhlYWRlcnMnLFxuICAgICdoaWRlTW9kZScsXG4gICAgJ2hpZGVPbk1hc2tUYXAnLFxuICAgICdoaWRlU2Nyb2xsYmFyJyxcbiAgICAnaG9yaXpvbnRhbE92ZXJmbG93JyxcbiAgICAnaHRtbCcsXG4gICAgJ2lkJyxcbiAgICAnaW5hY3RpdmVDaGlsZFRhYkluZGV4JyxcbiAgICAnaW5kZXhCYXInLFxuICAgICdpbmZpbml0ZScsXG4gICAgJ2lubGluZScsXG4gICAgJ2lubmVyQ2xzJyxcbiAgICAnaW5uZXJDdEhlaWdodCcsXG4gICAgJ2lubmVyV2lkdGgnLFxuICAgICdpbnN0YW5jZUNscycsXG4gICAgJ2l0ZW1CdXR0b25Nb2RlJyxcbiAgICAnaXRlbUNscycsXG4gICAgJ2l0ZW1Db25maWcnLFxuICAgICdpdGVtQ29udGVudENscycsXG4gICAgJ2l0ZW1EYXRhTWFwJyxcbiAgICAnaXRlbUlkJyxcbiAgICAnaXRlbUlubmVyQ2xzJyxcbiAgICAnaXRlbVJpcHBsZScsXG4gICAgJ2l0ZW1zJyxcbiAgICAnaXRlbXNGb2N1c2FibGUnLFxuICAgICdpdGVtVHBsJyxcbiAgICAna2V5TWFwJyxcbiAgICAna2V5TWFwRW5hYmxlZCcsXG4gICAgJ2tleU1hcFRhcmdldCcsXG4gICAgJ2xheW91dCcsXG4gICAgJ2xlZnQnLFxuICAgICdsZWZ0QXhpc0NlbGxDb25maWcnLFxuICAgICdsaXN0ZW5lcnMnLFxuICAgICdsb2FkaW5nSGVpZ2h0JyxcbiAgICAnbG9hZGluZ1RleHQnLFxuICAgICdtYWludGFpbkNoaWxkTm9kZXMnLFxuICAgICdtYW5hZ2VCb3JkZXJzJyxcbiAgICAnbWFyZ2luJyxcbiAgICAnbWFya0RpcnR5JyxcbiAgICAnbWFza2VkJyxcbiAgICAnbWF0cml4JyxcbiAgICAnbWF4SGVpZ2h0JyxcbiAgICAnbWF4SXRlbUNhY2hlJyxcbiAgICAnbWF4V2lkdGgnLFxuICAgICdtaW5IZWlnaHQnLFxuICAgICdtaW5pbXVtQnVmZmVyRGlzdGFuY2UnLFxuICAgICdtaW5XaWR0aCcsXG4gICAgJ21vZGFsJyxcbiAgICAnbW9kZWxWYWxpZGF0aW9uJyxcbiAgICAnbXVsdGlDb2x1bW5Tb3J0JyxcbiAgICAnbmFtZScsXG4gICAgJ25hbWVhYmxlJyxcbiAgICAnbmFtZUhvbGRlcicsXG4gICAgJ29uSXRlbURpc2Nsb3N1cmUnLFxuICAgICdwYWRkaW5nJyxcbiAgICAncGluRm9vdGVycycsXG4gICAgJ3BpbkhlYWRlcnMnLFxuICAgICdwaW5uZWRGb290ZXInLFxuICAgICdwaW5uZWRGb290ZXJIZWlnaHQnLFxuICAgICdwaW5uZWRIZWFkZXInLFxuICAgICdwaW5uZWRIZWFkZXJIZWlnaHQnLFxuICAgICdwbHVnaW5zJyxcbiAgICAncHJlc3NlZERlbGF5JyxcbiAgICAncHJldmVudFNlbGVjdGlvbk9uRGlzY2xvc2UnLFxuICAgICdwcmV2ZW50U2VsZWN0aW9uT25Ub29sJyxcbiAgICAncHVibGlzaGVzJyxcbiAgICAncmVjb3JkJyxcbiAgICAncmVmZXJlbmNlJyxcbiAgICAncmVmZXJlbmNlSG9sZGVyJyxcbiAgICAncmVsYXRpdmUnLFxuICAgICdyZW5kZXJUbycsXG4gICAgJ3Jlc2VydmVTY3JvbGxiYXInLFxuICAgICdyZXNldEZvY3VzUG9zaXRpb24nLFxuICAgICdyaWdodCcsXG4gICAgJ3JpcHBsZScsXG4gICAgJ3Jvd0xpbmVzJyxcbiAgICAncm93TnVtYmVycycsXG4gICAgJ3Njcm9sbGFibGUnLFxuICAgICdzY3JvbGxEb2NrJyxcbiAgICAnc2Nyb2xsVG9Ub3BPblJlZnJlc2gnLFxuICAgICdzZWxlY3RhYmxlJyxcbiAgICAnc2VsZWN0aW9uJyxcbiAgICAnc2VsZkFsaWduJyxcbiAgICAnc2Vzc2lvbicsXG4gICAgJ3NoYWRvdycsXG4gICAgJ3NoYXJlYWJsZU5hbWUnLFxuICAgICdzaGltJyxcbiAgICAnc2hvd0FuaW1hdGlvbicsXG4gICAgJ3NvcnRhYmxlJyxcbiAgICAnc3RhcnRDb2xHcm91cHNDb2xsYXBzZWQnLFxuICAgICdzdGFydFJvd0dyb3Vwc0NvbGxhcHNlZCcsXG4gICAgJ3N0YXRlZnVsJyxcbiAgICAnc3RhdGVmdWxEZWZhdWx0cycsXG4gICAgJ3N0YXRlSWQnLFxuICAgICdzdG9yZScsXG4gICAgJ3N0cmlwZWQnLFxuICAgICdzdHlsZScsXG4gICAgJ3RhYkluZGV4JyxcbiAgICAndGl0bGUnLFxuICAgICd0aXRsZUJhcicsXG4gICAgJ3RvRnJvbnRPblNob3cnLFxuICAgICd0b29sdGlwJyxcbiAgICAndG9wJyxcbiAgICAndG9wQXhpc0NlbGxDb25maWcnLFxuICAgICd0b3BSZW5kZXJlZEluZGV4JyxcbiAgICAndG91Y2hBY3Rpb24nLFxuICAgICd0cGwnLFxuICAgICd0cGxXcml0ZU1vZGUnLFxuICAgICd0cmFuc2xhdGFibGUnLFxuICAgICd0cmlnZ2VyQ3RFdmVudCcsXG4gICAgJ3RyaWdnZXJFdmVudCcsXG4gICAgJ3R3b1dheUJpbmRhYmxlJyxcbiAgICAndWknLFxuICAgICd1c2VyQ2xzJyxcbiAgICAndXNlclNlbGVjdGFibGUnLFxuICAgICd1c2VTaW1wbGVJdGVtcycsXG4gICAgJ3ZhcmlhYmxlSGVpZ2h0cycsXG4gICAgJ3ZlcnRpY2FsT3ZlcmZsb3cnLFxuICAgICd2aWV3TW9kZWwnLFxuICAgICd2aXNpYmxlSGVpZ2h0JyxcbiAgICAndmlzaWJsZUxlZnQnLFxuICAgICd2aXNpYmxlVG9wJyxcbiAgICAndmlzaWJsZVdpZHRoJyxcbiAgICAnd2VpZ2h0JyxcbiAgICAnd2VpZ2h0ZWQnLFxuICAgICd3aWR0aCcsXG4gICAgJ3gnLFxuICAgICd4dHlwZScsXG4gICAgJ3knLFxuICAgICd6SW5kZXgnLFxuICAgICdwbGF0Zm9ybUNvbmZpZycsXG4gICAgJ3Jlc3BvbnNpdmVDb25maWcnLFxuICAgICdhbGlnbicsXG4gICAgJ2ZpdFRvUGFyZW50JyxcbiAgICAnY29uZmlnJ1xuXTtcbiAgcHVibGljIHN0YXRpYyBFVkVOVFM6IGFueVtdID0gW1xuXHRcdHtuYW1lOidhY3RpdmF0ZScscGFyYW1ldGVyczonbmV3QWN0aXZlSXRlbSxwaXZvdGdyaWQsb2xkQWN0aXZlSXRlbSd9LFxuXHRcdHtuYW1lOidhY3RpdmVJdGVtY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTonYWRkJyxwYXJhbWV0ZXJzOicnfSxcblx0XHR7bmFtZTonYWRkZWQnLHBhcmFtZXRlcnM6J3NlbmRlcixjb250YWluZXIsaW5kZXgnfSxcblx0XHR7bmFtZTonYmVmb3JlYWN0aXZlSXRlbWNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlLHVuZGVmaW5lZCd9LFxuXHRcdHtuYW1lOidiZWZvcmVib3R0b21jaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSx1bmRlZmluZWQnfSxcblx0XHR7bmFtZTonYmVmb3JlY2VudGVyZWRjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSx1bmRlZmluZWQnfSxcblx0XHR7bmFtZTonYmVmb3JlZGlzYWJsZWRjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSx1bmRlZmluZWQnfSxcblx0XHR7bmFtZTonYmVmb3JlZG9ja2VkY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUsdW5kZWZpbmVkJ30sXG5cdFx0e25hbWU6J2JlZm9yZWhlaWdodGNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlLHVuZGVmaW5lZCd9LFxuXHRcdHtuYW1lOidiZWZvcmVoaWRkZW5jaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSx1bmRlZmluZWQnfSxcblx0XHR7bmFtZTonYmVmb3JlaGlkZScscGFyYW1ldGVyczonc2VuZGVyJ30sXG5cdFx0e25hbWU6J2JlZm9yZWxlZnRjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSx1bmRlZmluZWQnfSxcblx0XHR7bmFtZTonYmVmb3JlbWF4SGVpZ2h0Y2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUsdW5kZWZpbmVkJ30sXG5cdFx0e25hbWU6J2JlZm9yZW1heFdpZHRoY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUsdW5kZWZpbmVkJ30sXG5cdFx0e25hbWU6J2JlZm9yZW1pbkhlaWdodGNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlLHVuZGVmaW5lZCd9LFxuXHRcdHtuYW1lOidiZWZvcmVtaW5XaWR0aGNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlLHVuZGVmaW5lZCd9LFxuXHRcdHtuYW1lOidiZWZvcmVvcmllbnRhdGlvbmNoYW5nZScscGFyYW1ldGVyczonJ30sXG5cdFx0e25hbWU6J2JlZm9yZXJpZ2h0Y2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUsdW5kZWZpbmVkJ30sXG5cdFx0e25hbWU6J2JlZm9yZXNjcm9sbGFibGVjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSx1bmRlZmluZWQnfSxcblx0XHR7bmFtZTonYmVmb3Jlc2VsZWN0aW9uZXh0ZW5kJyxwYXJhbWV0ZXJzOidncmlkLEFuLGV4dGVuc2lvbid9LFxuXHRcdHtuYW1lOidiZWZvcmVzaG93JyxwYXJhbWV0ZXJzOidzZW5kZXInfSxcblx0XHR7bmFtZTonYmVmb3Jlc3RvcmVjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSx1bmRlZmluZWQnfSxcblx0XHR7bmFtZTonYmVmb3JldG9mcm9udCcscGFyYW1ldGVyczoncGl2b3RncmlkJ30sXG5cdFx0e25hbWU6J2JlZm9yZXRvcGNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlLHVuZGVmaW5lZCd9LFxuXHRcdHtuYW1lOidiZWZvcmV3aWR0aGNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlLHVuZGVmaW5lZCd9LFxuXHRcdHtuYW1lOidibHVyJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsZXZlbnQnfSxcblx0XHR7bmFtZTonYm90dG9tY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTonY2VsbHNlbGVjdGlvbicscGFyYW1ldGVyczonZ3JpZCxzZWxlY3Rpb24nfSxcblx0XHR7bmFtZTonY2VudGVyZWRjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSd9LFxuXHRcdHtuYW1lOidjaGlsZGRvdWJsZXRhcCcscGFyYW1ldGVyczoncGl2b3RncmlkLGxvY2F0aW9uJ30sXG5cdFx0e25hbWU6J2NoaWxkbG9uZ3ByZXNzJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsbG9jYXRpb24nfSxcblx0XHR7bmFtZTonY2hpbGRtb3VzZWVudGVyJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsbG9jYXRpb24nfSxcblx0XHR7bmFtZTonY2hpbGRtb3VzZWxlYXZlJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsbG9jYXRpb24nfSxcblx0XHR7bmFtZTonY2hpbGRzaW5nbGV0YXAnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxsb2NhdGlvbid9LFxuXHRcdHtuYW1lOidjaGlsZHRhcCcscGFyYW1ldGVyczoncGl2b3RncmlkLGxvY2F0aW9uJ30sXG5cdFx0e25hbWU6J2NoaWxkdGFwaG9sZCcscGFyYW1ldGVyczoncGl2b3RncmlkLGxvY2F0aW9uJ30sXG5cdFx0e25hbWU6J2NoaWxkdG91Y2hjYW5jZWwnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxsb2NhdGlvbid9LFxuXHRcdHtuYW1lOidjaGlsZHRvdWNoZW5kJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsbG9jYXRpb24nfSxcblx0XHR7bmFtZTonY2hpbGR0b3VjaG1vdmUnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxsb2NhdGlvbid9LFxuXHRcdHtuYW1lOidjaGlsZHRvdWNoc3RhcnQnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxsb2NhdGlvbid9LFxuXHRcdHtuYW1lOidjb2x1bW5hZGQnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxjb2x1bW4saW5kZXgnfSxcblx0XHR7bmFtZTonY29sdW1uaGlkZScscGFyYW1ldGVyczoncGl2b3RncmlkLGNvbHVtbid9LFxuXHRcdHtuYW1lOidjb2x1bW5tZW51Y3JlYXRlZCcscGFyYW1ldGVyczonZ3JpZCxjb2x1bW4sbWVudSd9LFxuXHRcdHtuYW1lOidjb2x1bW5tb3ZlJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsY29sdW1uLGZyb21JbmRleCx0b0luZGV4J30sXG5cdFx0e25hbWU6J2NvbHVtbnJlbW92ZScscGFyYW1ldGVyczoncGl2b3RncmlkLGNvbHVtbid9LFxuXHRcdHtuYW1lOidjb2x1bW5yZXNpemUnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxjb2x1bW4sd2lkdGgnfSxcblx0XHR7bmFtZTonY29sdW1uc2VsZWN0aW9uJyxwYXJhbWV0ZXJzOidncmlkLHNlbGVjdGlvbid9LFxuXHRcdHtuYW1lOidjb2x1bW5zaG93JyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsY29sdW1uJ30sXG5cdFx0e25hbWU6J2NvbHVtbnNvcnQnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxjb2x1bW4sZGlyZWN0aW9uJ30sXG5cdFx0e25hbWU6J2RlYWN0aXZhdGUnLHBhcmFtZXRlcnM6J29sZEFjdGl2ZUl0ZW0scGl2b3RncmlkLG5ld0FjdGl2ZUl0ZW0nfSxcblx0XHR7bmFtZTonZGVzZWxlY3QnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxyZWNvcmRzJ30sXG5cdFx0e25hbWU6J2Rlc3Ryb3knLHBhcmFtZXRlcnM6Jyd9LFxuXHRcdHtuYW1lOidkaXNhYmxlZGNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlJ30sXG5cdFx0e25hbWU6J2Rpc2Nsb3NlJyxwYXJhbWV0ZXJzOidsaXN0LHJlY29yZCx0YXJnZXQsaW5kZXgsZXZlbnQnfSxcblx0XHR7bmFtZTonZG9ja2VkY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTonZXJhc2VkJyxwYXJhbWV0ZXJzOidzZW5kZXInfSxcblx0XHR7bmFtZTonZmxvYXRpbmdjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcixwb3NpdGlvbmVkJ30sXG5cdFx0e25hbWU6J2ZvY3VzJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsZXZlbnQnfSxcblx0XHR7bmFtZTonZm9jdXNlbnRlcicscGFyYW1ldGVyczoncGl2b3RncmlkLGV2ZW50J30sXG5cdFx0e25hbWU6J2ZvY3VzbGVhdmUnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxldmVudCd9LFxuXHRcdHtuYW1lOidmdWxsc2NyZWVuJyxwYXJhbWV0ZXJzOidzZW5kZXInfSxcblx0XHR7bmFtZTonaGVpZ2h0Y2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTonaGlkZGVuY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTonaGlkZScscGFyYW1ldGVyczonc2VuZGVyJ30sXG5cdFx0e25hbWU6J2luaXRpYWxpemUnLHBhcmFtZXRlcnM6J3NlbmRlcid9LFxuXHRcdHtuYW1lOidpdGVtYWN0aW9uJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsaW5kZXgscmVjb3JkLGFjdGlvbid9LFxuXHRcdHtuYW1lOidpdGVtZG91YmxldGFwJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsaW5kZXgsdGFyZ2V0LHJlY29yZCxlJ30sXG5cdFx0e25hbWU6J2l0ZW1sb25ncHJlc3MnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxpbmRleCx0YXJnZXQscmVjb3JkLGUnfSxcblx0XHR7bmFtZTonaXRlbW1vdXNlZW50ZXInLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxpbmRleCx0YXJnZXQscmVjb3JkLGUnfSxcblx0XHR7bmFtZTonaXRlbW1vdXNlbGVhdmUnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxpbmRleCx0YXJnZXQscmVjb3JkLGUnfSxcblx0XHR7bmFtZTonaXRlbXNpbmdsZXRhcCcscGFyYW1ldGVyczoncGl2b3RncmlkLGluZGV4LHRhcmdldCxyZWNvcmQsZSd9LFxuXHRcdHtuYW1lOidpdGVtc3dpcGUnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxpbmRleCx0YXJnZXQscmVjb3JkLGUnfSxcblx0XHR7bmFtZTonaXRlbXRhcCcscGFyYW1ldGVyczoncGl2b3RncmlkLGluZGV4LHRhcmdldCxyZWNvcmQsZSd9LFxuXHRcdHtuYW1lOidpdGVtdGFwaG9sZCcscGFyYW1ldGVyczoncGl2b3RncmlkLGluZGV4LHRhcmdldCxyZWNvcmQsZSd9LFxuXHRcdHtuYW1lOidpdGVtdG91Y2hjYW5jZWwnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxpbmRleCx0YXJnZXQscmVjb3JkLGUnfSxcblx0XHR7bmFtZTonaXRlbXRvdWNoZW5kJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsaW5kZXgsdGFyZ2V0LHJlY29yZCxlJ30sXG5cdFx0e25hbWU6J2l0ZW10b3VjaG1vdmUnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxpbmRleCx0YXJnZXQscmVjb3JkLGUnfSxcblx0XHR7bmFtZTonaXRlbXRvdWNoc3RhcnQnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCxpbmRleCx0YXJnZXQscmVjb3JkLGUnfSxcblx0XHR7bmFtZTonbGVmdGNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlJ30sXG5cdFx0e25hbWU6J21heEhlaWdodGNoYW5nZScscGFyYW1ldGVyczonc2VuZGVyLHZhbHVlLG9sZFZhbHVlJ30sXG5cdFx0e25hbWU6J21heFdpZHRoY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTonbWluSGVpZ2h0Y2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTonbWluV2lkdGhjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSd9LFxuXHRcdHtuYW1lOidtb3ZlJyxwYXJhbWV0ZXJzOicnfSxcblx0XHR7bmFtZTonbW92ZWQnLHBhcmFtZXRlcnM6J3NlbmRlcixjb250YWluZXIsdG9JbmRleCxmcm9tSW5kZXgnfSxcblx0XHR7bmFtZTonbmF2aWdhdGUnLHBhcmFtZXRlcnM6J3Bpdm90Z3JpZCx0byxmcm9tJ30sXG5cdFx0e25hbWU6J29yaWVudGF0aW9uY2hhbmdlJyxwYXJhbWV0ZXJzOicnfSxcblx0XHR7bmFtZToncGFpbnRlZCcscGFyYW1ldGVyczonc2VuZGVyLGVsZW1lbnQnfSxcblx0XHR7bmFtZToncGl2b3RiZWZvcmVyZWNvbmZpZ3VyZScscGFyYW1ldGVyczonbWF0cml4LGNvbmZpZyd9LFxuXHRcdHtuYW1lOidwaXZvdGJlZm9yZXJlcXVlc3QnLHBhcmFtZXRlcnM6J21hdHJpeCxwYXJhbXMnfSxcblx0XHR7bmFtZToncGl2b3RidWlsZHRvdGFscycscGFyYW1ldGVyczonbWF0cml4LHRvdGFscyd9LFxuXHRcdHtuYW1lOidwaXZvdGNvbHVtbnNidWlsdCcscGFyYW1ldGVyczonbWF0cml4LGNvbHVtbnMnfSxcblx0XHR7bmFtZToncGl2b3Rkb25lJyxwYXJhbWV0ZXJzOidtYXRyaXgnfSxcblx0XHR7bmFtZToncGl2b3Rncm91cGNlbGxkb3VibGV0YXAnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90Z3JvdXBjZWxsdGFwJyxwYXJhbWV0ZXJzOidwYXJhbXMsZSd9LFxuXHRcdHtuYW1lOidwaXZvdGdyb3VwY2VsbHRhcGhvbGQnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90Z3JvdXBjb2xsYXBzZScscGFyYW1ldGVyczonbWF0cml4LHR5cGUsZ3JvdXAnfSxcblx0XHR7bmFtZToncGl2b3Rncm91cGRvdWJsZXRhcCcscGFyYW1ldGVyczoncGFyYW1zLGUnfSxcblx0XHR7bmFtZToncGl2b3Rncm91cGV4cGFuZCcscGFyYW1ldGVyczonbWF0cml4LHR5cGUsZ3JvdXAnfSxcblx0XHR7bmFtZToncGl2b3Rncm91cHRhcCcscGFyYW1ldGVyczoncGFyYW1zLGUnfSxcblx0XHR7bmFtZToncGl2b3Rncm91cHRhcGhvbGQnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90aXRlbWNlbGxkb3VibGV0YXAnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90aXRlbWNlbGx0YXAnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90aXRlbWNlbGx0YXBob2xkJyxwYXJhbWV0ZXJzOidwYXJhbXMsZSd9LFxuXHRcdHtuYW1lOidwaXZvdGl0ZW1kb3VibGV0YXAnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90aXRlbXRhcCcscGFyYW1ldGVyczoncGFyYW1zLGUnfSxcblx0XHR7bmFtZToncGl2b3RpdGVtdGFwaG9sZCcscGFyYW1ldGVyczoncGFyYW1zLGUnfSxcblx0XHR7bmFtZToncGl2b3Rtb2RlbGJ1aWx0JyxwYXJhbWV0ZXJzOidtYXRyaXgsbW9kZWwnfSxcblx0XHR7bmFtZToncGl2b3Rwcm9ncmVzcycscGFyYW1ldGVyczonbWF0cml4LGluZGV4LHRvdGFsJ30sXG5cdFx0e25hbWU6J3Bpdm90cmVjb25maWd1cmUnLHBhcmFtZXRlcnM6J21hdHJpeCxjb25maWcnfSxcblx0XHR7bmFtZToncGl2b3RyZWNvcmRidWlsdCcscGFyYW1ldGVyczonbWF0cml4LHJlY29yZCd9LFxuXHRcdHtuYW1lOidwaXZvdHJlcXVlc3RleGNlcHRpb24nLHBhcmFtZXRlcnM6J21hdHJpeCxyZXNwb25zZSd9LFxuXHRcdHtuYW1lOidwaXZvdHN0YXJ0JyxwYXJhbWV0ZXJzOidtYXRyaXgnfSxcblx0XHR7bmFtZToncGl2b3RzdG9yZWJ1aWx0JyxwYXJhbWV0ZXJzOidtYXRyaXgsc3RvcmUnfSxcblx0XHR7bmFtZToncGl2b3R0b3RhbGNlbGxkb3VibGV0YXAnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90dG90YWxjZWxsdGFwJyxwYXJhbWV0ZXJzOidwYXJhbXMsZSd9LFxuXHRcdHtuYW1lOidwaXZvdHRvdGFsY2VsbHRhcGhvbGQnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90dG90YWxkb3VibGV0YXAnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90dG90YWx0YXAnLHBhcmFtZXRlcnM6J3BhcmFtcyxlJ30sXG5cdFx0e25hbWU6J3Bpdm90dG90YWx0YXBob2xkJyxwYXJhbWV0ZXJzOidwYXJhbXMsZSd9LFxuXHRcdHtuYW1lOidwb3NpdGlvbmVkY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIscG9zaXRpb25lZCd9LFxuXHRcdHtuYW1lOidyZWZyZXNoJyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQnfSxcblx0XHR7bmFtZToncmVtb3ZlJyxwYXJhbWV0ZXJzOicnfSxcblx0XHR7bmFtZToncmVtb3ZlZCcscGFyYW1ldGVyczonc2VuZGVyLGNvbnRhaW5lcixpbmRleCd9LFxuXHRcdHtuYW1lOidyZW5kZXJlZGNoYW5nZScscGFyYW1ldGVyczoncGl2b3RncmlkLGl0ZW0scmVuZGVyZWQnfSxcblx0XHR7bmFtZToncmVzaXplJyxwYXJhbWV0ZXJzOidlbGVtZW50LGluZm8nfSxcblx0XHR7bmFtZToncmlnaHRjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSd9LFxuXHRcdHtuYW1lOidzY3JvbGxhYmxlY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTonc2VsZWN0JyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQsc2VsZWN0ZWQnfSxcblx0XHR7bmFtZTonc2VsZWN0aW9uZXh0ZW5kZXJkcmFnJyxwYXJhbWV0ZXJzOidncmlkLEFuLGV4dGVuc2lvbid9LFxuXHRcdHtuYW1lOidzaG93JyxwYXJhbWV0ZXJzOidzZW5kZXInfSxcblx0XHR7bmFtZTonc3RvcmVjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSd9LFxuXHRcdHtuYW1lOid0b2Zyb250JyxwYXJhbWV0ZXJzOidwaXZvdGdyaWQnfSxcblx0XHR7bmFtZTondG9wY2hhbmdlJyxwYXJhbWV0ZXJzOidzZW5kZXIsdmFsdWUsb2xkVmFsdWUnfSxcblx0XHR7bmFtZTondXBkYXRlZGF0YScscGFyYW1ldGVyczonc2VuZGVyLG5ld0RhdGEnfSxcblx0XHR7bmFtZTond2lkdGhjaGFuZ2UnLHBhcmFtZXRlcnM6J3NlbmRlcix2YWx1ZSxvbGRWYWx1ZSd9LFxuXHRcdHtuYW1lOidyZWFkeScscGFyYW1ldGVyczonJ31cbl07XG4gIHB1YmxpYyBzdGF0aWMgRVZFTlROQU1FUzogc3RyaW5nW10gPSBbXG5cdFx0J2FjdGl2YXRlJyxcblx0XHQnYWN0aXZlSXRlbWNoYW5nZScsXG5cdFx0J2FkZCcsXG5cdFx0J2FkZGVkJyxcblx0XHQnYmVmb3JlYWN0aXZlSXRlbWNoYW5nZScsXG5cdFx0J2JlZm9yZWJvdHRvbWNoYW5nZScsXG5cdFx0J2JlZm9yZWNlbnRlcmVkY2hhbmdlJyxcblx0XHQnYmVmb3JlZGlzYWJsZWRjaGFuZ2UnLFxuXHRcdCdiZWZvcmVkb2NrZWRjaGFuZ2UnLFxuXHRcdCdiZWZvcmVoZWlnaHRjaGFuZ2UnLFxuXHRcdCdiZWZvcmVoaWRkZW5jaGFuZ2UnLFxuXHRcdCdiZWZvcmVoaWRlJyxcblx0XHQnYmVmb3JlbGVmdGNoYW5nZScsXG5cdFx0J2JlZm9yZW1heEhlaWdodGNoYW5nZScsXG5cdFx0J2JlZm9yZW1heFdpZHRoY2hhbmdlJyxcblx0XHQnYmVmb3JlbWluSGVpZ2h0Y2hhbmdlJyxcblx0XHQnYmVmb3JlbWluV2lkdGhjaGFuZ2UnLFxuXHRcdCdiZWZvcmVvcmllbnRhdGlvbmNoYW5nZScsXG5cdFx0J2JlZm9yZXJpZ2h0Y2hhbmdlJyxcblx0XHQnYmVmb3Jlc2Nyb2xsYWJsZWNoYW5nZScsXG5cdFx0J2JlZm9yZXNlbGVjdGlvbmV4dGVuZCcsXG5cdFx0J2JlZm9yZXNob3cnLFxuXHRcdCdiZWZvcmVzdG9yZWNoYW5nZScsXG5cdFx0J2JlZm9yZXRvZnJvbnQnLFxuXHRcdCdiZWZvcmV0b3BjaGFuZ2UnLFxuXHRcdCdiZWZvcmV3aWR0aGNoYW5nZScsXG5cdFx0J2JsdXInLFxuXHRcdCdib3R0b21jaGFuZ2UnLFxuXHRcdCdjZWxsc2VsZWN0aW9uJyxcblx0XHQnY2VudGVyZWRjaGFuZ2UnLFxuXHRcdCdjaGlsZGRvdWJsZXRhcCcsXG5cdFx0J2NoaWxkbG9uZ3ByZXNzJyxcblx0XHQnY2hpbGRtb3VzZWVudGVyJyxcblx0XHQnY2hpbGRtb3VzZWxlYXZlJyxcblx0XHQnY2hpbGRzaW5nbGV0YXAnLFxuXHRcdCdjaGlsZHRhcCcsXG5cdFx0J2NoaWxkdGFwaG9sZCcsXG5cdFx0J2NoaWxkdG91Y2hjYW5jZWwnLFxuXHRcdCdjaGlsZHRvdWNoZW5kJyxcblx0XHQnY2hpbGR0b3VjaG1vdmUnLFxuXHRcdCdjaGlsZHRvdWNoc3RhcnQnLFxuXHRcdCdjb2x1bW5hZGQnLFxuXHRcdCdjb2x1bW5oaWRlJyxcblx0XHQnY29sdW1ubWVudWNyZWF0ZWQnLFxuXHRcdCdjb2x1bW5tb3ZlJyxcblx0XHQnY29sdW1ucmVtb3ZlJyxcblx0XHQnY29sdW1ucmVzaXplJyxcblx0XHQnY29sdW1uc2VsZWN0aW9uJyxcblx0XHQnY29sdW1uc2hvdycsXG5cdFx0J2NvbHVtbnNvcnQnLFxuXHRcdCdkZWFjdGl2YXRlJyxcblx0XHQnZGVzZWxlY3QnLFxuXHRcdCdkZXN0cm95Jyxcblx0XHQnZGlzYWJsZWRjaGFuZ2UnLFxuXHRcdCdkaXNjbG9zZScsXG5cdFx0J2RvY2tlZGNoYW5nZScsXG5cdFx0J2VyYXNlZCcsXG5cdFx0J2Zsb2F0aW5nY2hhbmdlJyxcblx0XHQnZm9jdXMnLFxuXHRcdCdmb2N1c2VudGVyJyxcblx0XHQnZm9jdXNsZWF2ZScsXG5cdFx0J2Z1bGxzY3JlZW4nLFxuXHRcdCdoZWlnaHRjaGFuZ2UnLFxuXHRcdCdoaWRkZW5jaGFuZ2UnLFxuXHRcdCdoaWRlJyxcblx0XHQnaW5pdGlhbGl6ZScsXG5cdFx0J2l0ZW1hY3Rpb24nLFxuXHRcdCdpdGVtZG91YmxldGFwJyxcblx0XHQnaXRlbWxvbmdwcmVzcycsXG5cdFx0J2l0ZW1tb3VzZWVudGVyJyxcblx0XHQnaXRlbW1vdXNlbGVhdmUnLFxuXHRcdCdpdGVtc2luZ2xldGFwJyxcblx0XHQnaXRlbXN3aXBlJyxcblx0XHQnaXRlbXRhcCcsXG5cdFx0J2l0ZW10YXBob2xkJyxcblx0XHQnaXRlbXRvdWNoY2FuY2VsJyxcblx0XHQnaXRlbXRvdWNoZW5kJyxcblx0XHQnaXRlbXRvdWNobW92ZScsXG5cdFx0J2l0ZW10b3VjaHN0YXJ0Jyxcblx0XHQnbGVmdGNoYW5nZScsXG5cdFx0J21heEhlaWdodGNoYW5nZScsXG5cdFx0J21heFdpZHRoY2hhbmdlJyxcblx0XHQnbWluSGVpZ2h0Y2hhbmdlJyxcblx0XHQnbWluV2lkdGhjaGFuZ2UnLFxuXHRcdCdtb3ZlJyxcblx0XHQnbW92ZWQnLFxuXHRcdCduYXZpZ2F0ZScsXG5cdFx0J29yaWVudGF0aW9uY2hhbmdlJyxcblx0XHQncGFpbnRlZCcsXG5cdFx0J3Bpdm90YmVmb3JlcmVjb25maWd1cmUnLFxuXHRcdCdwaXZvdGJlZm9yZXJlcXVlc3QnLFxuXHRcdCdwaXZvdGJ1aWxkdG90YWxzJyxcblx0XHQncGl2b3Rjb2x1bW5zYnVpbHQnLFxuXHRcdCdwaXZvdGRvbmUnLFxuXHRcdCdwaXZvdGdyb3VwY2VsbGRvdWJsZXRhcCcsXG5cdFx0J3Bpdm90Z3JvdXBjZWxsdGFwJyxcblx0XHQncGl2b3Rncm91cGNlbGx0YXBob2xkJyxcblx0XHQncGl2b3Rncm91cGNvbGxhcHNlJyxcblx0XHQncGl2b3Rncm91cGRvdWJsZXRhcCcsXG5cdFx0J3Bpdm90Z3JvdXBleHBhbmQnLFxuXHRcdCdwaXZvdGdyb3VwdGFwJyxcblx0XHQncGl2b3Rncm91cHRhcGhvbGQnLFxuXHRcdCdwaXZvdGl0ZW1jZWxsZG91YmxldGFwJyxcblx0XHQncGl2b3RpdGVtY2VsbHRhcCcsXG5cdFx0J3Bpdm90aXRlbWNlbGx0YXBob2xkJyxcblx0XHQncGl2b3RpdGVtZG91YmxldGFwJyxcblx0XHQncGl2b3RpdGVtdGFwJyxcblx0XHQncGl2b3RpdGVtdGFwaG9sZCcsXG5cdFx0J3Bpdm90bW9kZWxidWlsdCcsXG5cdFx0J3Bpdm90cHJvZ3Jlc3MnLFxuXHRcdCdwaXZvdHJlY29uZmlndXJlJyxcblx0XHQncGl2b3RyZWNvcmRidWlsdCcsXG5cdFx0J3Bpdm90cmVxdWVzdGV4Y2VwdGlvbicsXG5cdFx0J3Bpdm90c3RhcnQnLFxuXHRcdCdwaXZvdHN0b3JlYnVpbHQnLFxuXHRcdCdwaXZvdHRvdGFsY2VsbGRvdWJsZXRhcCcsXG5cdFx0J3Bpdm90dG90YWxjZWxsdGFwJyxcblx0XHQncGl2b3R0b3RhbGNlbGx0YXBob2xkJyxcblx0XHQncGl2b3R0b3RhbGRvdWJsZXRhcCcsXG5cdFx0J3Bpdm90dG90YWx0YXAnLFxuXHRcdCdwaXZvdHRvdGFsdGFwaG9sZCcsXG5cdFx0J3Bvc2l0aW9uZWRjaGFuZ2UnLFxuXHRcdCdyZWZyZXNoJyxcblx0XHQncmVtb3ZlJyxcblx0XHQncmVtb3ZlZCcsXG5cdFx0J3JlbmRlcmVkY2hhbmdlJyxcblx0XHQncmVzaXplJyxcblx0XHQncmlnaHRjaGFuZ2UnLFxuXHRcdCdzY3JvbGxhYmxlY2hhbmdlJyxcblx0XHQnc2VsZWN0Jyxcblx0XHQnc2VsZWN0aW9uZXh0ZW5kZXJkcmFnJyxcblx0XHQnc2hvdycsXG5cdFx0J3N0b3JlY2hhbmdlJyxcblx0XHQndG9mcm9udCcsXG5cdFx0J3RvcGNoYW5nZScsXG5cdFx0J3VwZGF0ZWRhdGEnLFxuXHRcdCd3aWR0aGNoYW5nZScsXG5cdFx0J3JlYWR5J1xuXTtcbn1cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Bpdm90Z3JpZCcsIFxuICBpbnB1dHM6IHBpdm90Z3JpZE1ldGFEYXRhLlBST1BFUlRJRVMsXG4gIG91dHB1dHM6IHBpdm90Z3JpZE1ldGFEYXRhLkVWRU5UTkFNRVMsXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBiYXNlLCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBFeHRQaXZvdGdyaWRDb21wb25lbnQpfV0sXG4gIHRlbXBsYXRlOiAnPG5nLXRlbXBsYXRlPjwvbmctdGVtcGxhdGU+J1xufSlcbmV4cG9ydCBjbGFzcyBFeHRQaXZvdGdyaWRDb21wb25lbnQgZXh0ZW5kcyBiYXNlIGltcGxlbWVudHMgT25Jbml0LEFmdGVyQ29udGVudEluaXQsT25DaGFuZ2VzIHtcbiAgY29uc3RydWN0b3IoXG4gICAgZVJlZjpFbGVtZW50UmVmLCBASG9zdCgpIEBPcHRpb25hbCgpIEBTa2lwU2VsZigpIHB1YmxpYyBob3N0Q29tcG9uZW50IDogYmFzZSkge1xuICAgICAgc3VwZXIoZVJlZi5uYXRpdmVFbGVtZW50LHBpdm90Z3JpZE1ldGFEYXRhLGhvc3RDb21wb25lbnQpXG4gICAgfVxuICBwdWJsaWMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5iYXNlT25Jbml0KHBpdm90Z3JpZE1ldGFEYXRhKVxuICB9XG4gIHB1YmxpYyBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgdGhpcy5iYXNlQWZ0ZXJDb250ZW50SW5pdCgpXG4gICAgLy90aGlzWydyZWFkeSddLmVtaXQodGhpcylcbiAgfVxuICAvL3B1YmxpYyBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7dGhpcy5iYXNlT25DaGFuZ2VzKGNoYW5nZXMpfVxuXG59Il19